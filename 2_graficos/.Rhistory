"i_c1" = "#e3e3e3")
# Gráfico preeliminar con ggplot ------------------------------------------
ggplot(plot_media_i)  +
geom_bar(aes(x = reorder(tipo_indicador, -media),
y = media,
color = tipo_indicador),
stat = "identity",
color = "#000000",
alpha = 0.5) +
geom_pointrange(aes(x = tipo_indicador,
y = media,
ymin = l_inferior,
ymax = l_superior),
colour = "#676767",
size = 0.2) +
theme_classic()
# Gráfico preeliminar con ggplot ------------------------------------------
ggplot(plot_media_i)  +
geom_bar(aes(x = reorder(tipo_indicador, -media),
y = media,
color = tipo_indicador),
stat = "identity",
color = "#000000",
alpha = 0.5) +
geom_pointrange(aes(x = tipo_indicador,
y = media,
ymin = l_inferior,
ymax = l_superior),
colour = "#676767",
size = 0.2) +
scale_color_manual(values = colores)
# Gráfico preeliminar con ggplot ------------------------------------------
ggplot(plot_media_i)  +
geom_bar(aes(x = reorder(tipo_indicador, -media),
y = media,
color = tipo_indicador),
stat = "identity",
color = "#000000",
alpha = 0.5) +
geom_pointrange(aes(x = tipo_indicador,
y = media,
ymin = l_inferior,
ymax = l_superior),
colour = "#676767",
size = 0.2) +
scale_color_manual(values = colores) +
theme_classic()
# Gráfico preeliminar con ggplot ------------------------------------------
ggplot(plot_media_i)  +
geom_bar(aes(x = reorder(tipo_indicador, -media),
y = media,
color = tipo_indicador),
stat = "identity",
color = "#000000",
alpha = 0.5) +
geom_pointrange(aes(x = tipo_indicador,
y = media,
ymin = l_inferior,
ymax = l_superior),
colour = "#676767",
size = 0.2) +
scale_fill_manual(values = colores) +
theme_classic()
View(plot_media_i)
# Gráfico preeliminar con ggplot ------------------------------------------
ggplot(plot_media_i)  +
geom_bar(aes(x = reorder(tipo_indicador, -media),
y = media,
color = tipo_indicador),
stat = "identity",
color = "#000000",
alpha = 0.5) +
geom_pointrange(aes(x = tipo_indicador,
y = media,
ymin = l_inferior,
ymax = l_superior),
colour = "#676767",
size = 0.2) +
scale_fill_manual(values = colores) +
theme_classic()
# Gráfico preeliminar con ggplot ------------------------------------------
ggplot(plot_media_i)  +
geom_bar(aes(x = reorder(tipo_indicador, -media),
y = media,
color = tipo_indicador),
stat = "identity",
color = "#000000",
alpha = 0.5) +
geom_pointrange(aes(x = tipo_indicador,
y = media,
ymin = l_inferior,
ymax = l_superior),
color = "#676767",
size = 0.2) +
scale_fill_manual(values = colores) +
theme_classic()
# Gráfico preeliminar con ggplot ------------------------------------------
ggplot(plot_media_i)  +
geom_bar(aes(x = reorder(tipo_indicador, -media),
y = media,
color = tipo_indicador),
stat = "identity",
color = "#ffffff",
alpha = 0.5) +
geom_pointrange(aes(x = tipo_indicador,
y = media,
ymin = l_inferior,
ymax = l_superior),
color = "#676767",
size = 0.2) +
scale_fill_manual(values = colores) +
theme_classic()
View(plot_media_i)
# Gráfico preeliminar con ggplot ------------------------------------------
ggplot(plot_media_i)  +
geom_bar(aes(x = reorder(tipo_indicador, -media),
y = media,
fill = tipo_indicador),
stat = "identity",
color = "#ffffff",
alpha = 0.5) +
geom_pointrange(aes(x = tipo_indicador,
y = media,
ymin = l_inferior,
ymax = l_superior),
color = "#676767",
size = 0.2) +
scale_fill_manual(values = colores) +
theme_classic()
# Gráfico preeliminar con ggplot ------------------------------------------
ggplot(plot_media_i)  +
geom_bar(aes(x = reorder(tipo_indicador, -media),
y = media,
fill = tipo_indicador),
stat = "identity",
color = "#ffffff",
alpha = 0.5) +
geom_pointrange(aes(x = tipo_indicador,
y = media,
ymin = l_inferior,
ymax = l_superior),
color = "#676767",
size = 0.2) +
scale_fill_manual(values = colores) +
theme_classic() +
theme(legend.position = none)
# Gráfico preeliminar con ggplot ------------------------------------------
ggplot(plot_media_i)  +
geom_bar(aes(x = reorder(tipo_indicador, -media),
y = media,
fill = tipo_indicador),
stat = "identity",
color = "#ffffff",
alpha = 0.5) +
geom_pointrange(aes(x = tipo_indicador,
y = media,
ymin = l_inferior,
ymax = l_superior),
color = "#676767",
size = 0.2) +
scale_fill_manual(values = colores) +
theme_classic() +
theme(legend.position = "none")
library(tidyverse)
library(tidyverse)
library(ggplot2)
datos_grafico <- read.csv("../0_bases_datos/indicadores_finales_top_10_2010_2020.csv")
feminismo_agrupado <- datos_grafico %>%
group_by(genero_agrupado) %>%
summarise(media_feminismo = mean(indicadores_feminista, na.rm = TRUE).
media_machismo = mean(indicadores_totales, na.rm = TRUE))
feminismo_agrupado <- datos_grafico %>%
group_by(genero_agrupado) %>%
summarise(media_feminismo = mean(indicadores_feminista, na.rm = TRUE),
media_machismo = mean(indicadores_totales, na.rm = TRUE))
View(feminismo_agrupado)
datos <- datos_originales %>%
group_by(genero_agrupado) %>%
summarise(media_feminismo = mean(indicadores_feminista, na.rm = TRUE),
media_machismo = mean(indicadores_totales, na.rm = TRUE))
datos_originales <- read.csv("../0_bases_datos/indicadores_finales_top_10_2010_2020.csv")
datos <- datos_originales %>%
group_by(genero_agrupado) %>%
summarise(media_feminismo = mean(indicadores_feminista, na.rm = TRUE),
media_machismo = mean(indicadores_totales, na.rm = TRUE))
# Marcamos un tamaño para el círculo central,
# de cara a poder integrar el gráfico visualmente en el tocadiscos
base_interno <- 0.39
datos_grafico <- datos %>%
mutate(valor_ajustado = media_feminismo + base_interno,
valor_ajustado2 = media_machismo + base_interno)
# Tocadiscos 1: machismo
discofem <- grafico %>%
ggplot(aes(x = genero_agrupado,
fill = genero_agrupado)) +
geom_bar(aes(y = valor_ajustado),
stat = "identity",
position = "dodge") +
geom_hline(yintercept = 0.39) +
coord_polar() +
scale_fill_manual(values = c(
"Electronica" = "#00FFFF",
"Pop" = "#9820c9",
"Hiphop" = "#7200A1",
"regueton" = "#B500FF"
))  +
theme_void() +
theme(
legend.position = "none",
text = element_text(family = "montserrat")
) +
ylim(0, max(datos$media_feminismo) + base_interno)
# Tocadiscos 1: machismo
discofem <- datos_grafico %>%
ggplot(aes(x = genero_agrupado,
fill = genero_agrupado)) +
geom_bar(aes(y = valor_ajustado),
stat = "identity",
position = "dodge") +
geom_hline(yintercept = 0.39) +
coord_polar() +
scale_fill_manual(values = c(
"Electronica" = "#00FFFF",
"Pop" = "#9820c9",
"Hiphop" = "#7200A1",
"regueton" = "#B500FF"
))  +
theme_void() +
theme(
legend.position = "none",
text = element_text(family = "montserrat")
) +
ylim(0, max(datos$media_feminismo) + base_interno)
# Gráfico
grafico <- datos_grafico %>%
mutate(valor_ajustado = media_feminismo + base_interno)
discofem <- datos_grafico %>%
ggplot(aes(x = genero_agrupado, fill = genero_agrupado)) +
geom_bar(aes(y = valor_ajustado), stat = "identity", position = "dodge") +
geom_hline(yintercept = 0.39) +
coord_polar() +
scale_fill_manual(values = c(
"Electronica" = "#00FFFF",
"Pop" = "#9820c9",
"Hiphop" = "#7200A1",
"regueton" = "#B500FF"
))  +
theme_void() +
theme(
legend.position = "none",
text = element_text(family = "montserrat")
) +
ylim(0, max(datos$media_feminismo) + base_interno)
discofem <- datos_grafico %>%
ggplot(aes(x = genero_agrupado, fill = genero_agrupado)) +
geom_bar(aes(y = valor_ajustado), stat = "identity", position = "dodge") +
geom_hline(yintercept = 0.39) +
coord_polar() +
scale_fill_manual(values = c(
"Electronica" = "#00FFFF",
"Pop" = "#9820c9",
"Hiphop" = "#7200A1",
"regueton" = "#B500FF"
))  +
theme_void() +
theme(
legend.position = "none",
text = element_text(family = "montserrat")
) +
ylim(0, max(datos$media_feminismo) + base_interno)
grafico
discofem
base_interno2 <- 1.5
datos_grafico2 <- datos %>%
mutate(valor_ajustado2 = media_machismo + base_interno2)
# Apertura y transformación de los datos ----------------------------------
datos <- read.csv("../0_bases_datos/indicadores_finales_top_10_2010_2020.csv")
# Transformar en formato largo
datos_indicadores <- datos %>%
mutate(i_a7 = i_a7 + i_c2,
i_a5 = i_a5 + i_c3) %>%
pivot_longer(
cols = c(starts_with("i_a"), "i_c1"),
names_to = "tipo_indicador",
values_to = "n_apariciones"
) %>%
# Se les cambian los nombres a los indicadores
mutate(tipo_indicadores = fct_recode(tipo_indicadores,
c(
)
))
# Transformar en formato largo
datos_indicadores <- datos %>%
mutate(i_a7 = i_a7 + i_c2,
i_a5 = i_a5 + i_c3) %>%
pivot_longer(
cols = c(starts_with("i_a"), "i_c1"),
names_to = "tipo_indicador",
values_to = "n_apariciones"
) #%>%
# Calcular la media y los errores -----------------------------------------
plot_media_i <- datos_indicadores %>%
group_by(tipo_indicador) %>%
summarise(
n = n(),
media = mean(n_apariciones) %>%
round(2),
sd = sd(n_apariciones)
) %>%
mutate(
se = sd / sqrt(n),
ic = se * qt((1 - 0.05) / 2 + .5, n-1),
l_inferior = (media - ic) %>%
round(2),
l_superior = (media + ic) %>%
round(2),
# Se crea también una variable para ordenarlos de mayor a menor
posicion_i = rank(-media, ties.method = "first")) %>%
select(media, l_inferior, l_superior, tipo_indicador, posicion_i)
# Crear la paleta de colores ----------------------------------------------
colores <- c("i_a1" = "#e3e3e3",
"i_a2" = "#c674ff",
"i_a3" = "#e3e3e3",
"i_a4" = "#e3e3e3",
"i_a5" = "#c674ff",
"i_a6" = "#c674ff",
"i_a7" = "#c674ff",
"i_c1" = "#e3e3e3")
# Gráfico preeliminar con ggplot ------------------------------------------
ggplot(plot_media_i)  +
geom_bar(aes(x = reorder(tipo_indicador, -media),
y = media,
fill = tipo_indicador),
stat = "identity",
color = "#ffffff",
alpha = 0.5) +
geom_pointrange(aes(x = tipo_indicador,
y = media,
ymin = l_inferior,
ymax = l_superior),
color = "#676767",
size = 0.2) +
scale_fill_manual(values = colores) +
theme_classic() +
theme(legend.position = "none")
# Transformar en formato largo
datos_indicadores <- datos %>%
mutate(i_a7 = i_a7 + i_c2,
i_a5 = i_a5 + i_c3) %>%
pivot_longer(
cols = c(starts_with("i_a"), "i_c1"),
names_to = "tipo_indicador",
values_to = "n_apariciones"
) %>%
# Se les cambian los nombres a los indicadores
mutate(tipo_indicadores = fct_recode(tipo_indicadores,
c("i_a5" = "Amor tóxico",
"i_a1" = "Cosificación",
"i_a2" = "Control",
"i_a3" = "No es Sí",
"i_a7" = "Competencia",
"i_a4" = "Roles tradicionales",
"i_a6" = "Lenguaje explícito",
"i_c1" = "Valicación masculina")))
# Transformar en formato largo
datos_indicadores <- datos %>%
mutate(i_a7 = i_a7 + i_c2,
i_a5 = i_a5 + i_c3) %>%
pivot_longer(
cols = c(starts_with("i_a"), "i_c1"),
names_to = "tipo_indicador",
values_to = "n_apariciones"
) %>%
# Se les cambian los nombres a los indicadores
mutate(tipo_indicador = fct_recode(tipo_indicador,
c("i_a5" = "Amor tóxico",
"i_a1" = "Cosificación",
"i_a2" = "Control",
"i_a3" = "No es Sí",
"i_a7" = "Competencia",
"i_a4" = "Roles tradicionales",
"i_a6" = "Lenguaje explícito",
"i_c1" = "Valicación masculina")))
# Transformar en formato largo
datos_indicadores <- datos %>%
mutate(i_a7 = i_a7 + i_c2,
i_a5 = i_a5 + i_c3) %>%
pivot_longer(
cols = c(starts_with("i_a"), "i_c1"),
names_to = "tipo_indicador",
values_to = "n_apariciones"
) %>%
# Se les cambian los nombres a los indicadores
mutate(tipo_indicador = fct_recode(tipo_indicador,
"i_a5" = "Amor tóxico",
"i_a1" = "Cosificación",
"i_a2" = "Control",
"i_a3" = "No es Sí",
"i_a7" = "Competencia",
"i_a4" = "Roles tradicionales",
"i_a6" = "Lenguaje explícito",
"i_c1" = "Valicación masculina"))
# Calcular la media y los errores -----------------------------------------
plot_media_i <- datos_indicadores %>%
group_by(tipo_indicador) %>%
summarise(
n = n(),
media = mean(n_apariciones) %>%
round(2),
sd = sd(n_apariciones)
) %>%
mutate(
se = sd / sqrt(n),
ic = se * qt((1 - 0.05) / 2 + .5, n-1),
l_inferior = (media - ic) %>%
round(2),
l_superior = (media + ic) %>%
round(2),
# Se crea también una variable para ordenarlos de mayor a menor
posicion_i = rank(-media, ties.method = "first")) %>%
select(media, l_inferior, l_superior, tipo_indicador, posicion_i)
# Crear la paleta de colores ----------------------------------------------
colores <- c("Cosificación" = "#e3e3e3",
"Control" = "#c674ff",
"No es Sí" = "#e3e3e3",
"Roles tradicionales" = "#e3e3e3",
"Amor tóxico" = "#c674ff",
"Lenguaje explícito" = "#c674ff",
"Competencia" = "#c674ff",
"Valicación masculina" = "#e3e3e3")
# Gráfico preeliminar con ggplot ------------------------------------------
ggplot(plot_media_i)  +
geom_bar(aes(x = reorder(tipo_indicador, -media),
y = media,
fill = tipo_indicador),
stat = "identity",
color = "#ffffff",
alpha = 0.5) +
geom_pointrange(aes(x = tipo_indicador,
y = media,
ymin = l_inferior,
ymax = l_superior),
color = "#676767",
size = 0.2) +
scale_fill_manual(values = colores) +
theme_classic() +
theme(legend.position = "none")
View(plot_media_i)
# Transformar en formato largo
datos_indicadores <- datos %>%
mutate(i_a7 = i_a7 + i_c2,
i_a5 = i_a5 + i_c3) %>%
pivot_longer(
cols = c(starts_with("i_a"), "i_c1"),
names_to = "tipo_indicador",
values_to = "n_apariciones"
) %>%
# Se les cambian los nombres a los indicadores
mutate(tipo_indicador = fct_recode(tipo_indicador,
"Amor tóxico" = "i_a5",
"Cosificación" = "i_a1",
"Control" = "i_a2",
"No es Sí" = "i_a3",
"Competencia" = "i_a7",
"Roles tradicionales" = "i_a4",
"Lenguaje explícito" = "i_a6",
"Valicación masculina" = "i_c1"))
# Calcular la media y los errores -----------------------------------------
plot_media_i <- datos_indicadores %>%
group_by(tipo_indicador) %>%
summarise(
n = n(),
media = mean(n_apariciones) %>%
round(2),
sd = sd(n_apariciones)
) %>%
mutate(
se = sd / sqrt(n),
ic = se * qt((1 - 0.05) / 2 + .5, n-1),
l_inferior = (media - ic) %>%
round(2),
l_superior = (media + ic) %>%
round(2),
# Se crea también una variable para ordenarlos de mayor a menor
posicion_i = rank(-media, ties.method = "first")) %>%
select(media, l_inferior, l_superior, tipo_indicador, posicion_i)
# Crear la paleta de colores ----------------------------------------------
colores <- c("Cosificación" = "#e3e3e3",
"Control" = "#c674ff",
"No es Sí" = "#e3e3e3",
"Roles tradicionales" = "#e3e3e3",
"Amor tóxico" = "#c674ff",
"Lenguaje explícito" = "#c674ff",
"Competencia" = "#c674ff",
"Valicación masculina" = "#e3e3e3")
# Gráfico preeliminar con ggplot ------------------------------------------
ggplot(plot_media_i)  +
geom_bar(aes(x = reorder(tipo_indicador, -media),
y = media,
fill = tipo_indicador),
stat = "identity",
color = "#ffffff",
alpha = 0.5) +
geom_pointrange(aes(x = tipo_indicador,
y = media,
ymin = l_inferior,
ymax = l_superior),
color = "#676767",
size = 0.2) +
scale_fill_manual(values = colores) +
theme_classic() +
theme(legend.position = "none")
